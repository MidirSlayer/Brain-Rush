<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>